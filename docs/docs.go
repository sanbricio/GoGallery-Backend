// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Soporte API GoGallery",
            "email": "gogalleryteam@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Elimina la cuenta de usuario tras verificar el código enviado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Confirmar eliminación de cuenta",
                "parameters": [
                    {
                        "description": "Datos para confirmar eliminación",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DTODeleteUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cuenta eliminada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Solicitud incorrecta",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "401": {
                        "description": "No autorizado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Autentica un usuario y genera un token JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Iniciar sesión",
                "parameters": [
                    {
                        "description": "Datos de autenticación",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DTOUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Respuesta exitosa",
                        "schema": {
                            "$ref": "#/definitions/dto.DTOLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Solicitud incorrecta",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "401": {
                        "description": "No autorizado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cierra la sesión del usuario autenticado",
                "tags": [
                    "auth"
                ],
                "summary": "Cerrar sesión",
                "responses": {
                    "200": {
                        "description": "Sesión cerrada",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registra un nuevo usuario en el sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Registro de usuario",
                "parameters": [
                    {
                        "description": "Datos de registro",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DTOUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Usuario creado",
                        "schema": {
                            "$ref": "#/definitions/dto.DTORegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Solicitud incorrecta",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/auth/request-delete": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Envía un código de verificación al correo para eliminar la cuenta",
                "tags": [
                    "auth"
                ],
                "summary": "Solicitar eliminación de cuenta",
                "responses": {
                    "200": {
                        "description": "Código enviado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "No autorizado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/auth/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Actualiza los datos de un usuario autenticado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Actualizar usuario",
                "parameters": [
                    {
                        "description": "Datos de actualización",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DTOUpdateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario actualizado",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Solicitud incorrecta",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "401": {
                        "description": "No autorizado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.DTODeleteUser": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.DTOLoginResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.DTORegisterResponse": {
            "type": "object",
            "properties": {
                "firstname": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.DTOUpdateUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.DTOUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "exception.ApiException": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "GoGallery",
	Description:      "API para la gestión de subida de fotos, con una autentificación",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
