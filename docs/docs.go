// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Support GoGallery",
            "email": "gogalleryteam@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Elimina la cuenta de usuario tras verificar el código enviado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Confirmar eliminación de cuenta",
                "parameters": [
                    {
                        "description": "Datos para confirmar eliminación",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userDTO.UserDeleteDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Se han eliminado los datos del usuario correctamente",
                        "schema": {
                            "$ref": "#/definitions/userDTO.UserRegisterResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Solicitud incorrecta",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "403": {
                        "description": "Los datos proporcionados no coinciden con el usuario autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "500": {
                        "description": "Ha ocurrido un error inesperado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Autentica un usuario y genera un token JWT para guardarlo en una cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Iniciar sesión",
                "parameters": [
                    {
                        "description": "Datos de autenticación",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userDTO.LoginRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Se ha iniciado sesion correctamente",
                        "schema": {
                            "$ref": "#/definitions/userDTO.LoginResponseDTO"
                        },
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "Authorization=auth_token; HttpOnly; Secure"
                            }
                        }
                    },
                    "400": {
                        "description": "Contraseña incorrecta",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "401": {
                        "description": "No autorizado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "500": {
                        "description": "Ha ocurrido un error inesperado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Cierra la sesión del usuario autenticado, elimina la cookie auth_token",
                "tags": [
                    "auth"
                ],
                "summary": "Cerrar sesión",
                "responses": {
                    "200": {
                        "description": "Se ha cerrado sesión correctamente",
                        "schema": {
                            "$ref": "#/definitions/userDTO.UserMessageResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "403": {
                        "description": "Los datos proporcionados no coinciden con el usuario autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "500": {
                        "description": "Ha ocurrido un error inesperado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Registra un nuevo usuario en el sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Registro de un nuevo usuario",
                "parameters": [
                    {
                        "description": "Datos de registro",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userDTO.UserDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Usuario creado",
                        "schema": {
                            "$ref": "#/definitions/userDTO.UserRegisterResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Solicitud incorrecta",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "500": {
                        "description": "Ha ocurrido un error inesperado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/auth/request-delete": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Envía un código de verificación al correo para eliminar la cuenta",
                "tags": [
                    "auth"
                ],
                "summary": "Solicitar eliminación de cuenta",
                "responses": {
                    "200": {
                        "description": "Se ha enviado un código de confirmación al correo electrónico",
                        "schema": {
                            "$ref": "#/definitions/userDTO.UserRegisterResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "403": {
                        "description": "Los datos proporcionados no coinciden con el usuario autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "500": {
                        "description": "Ha ocurrido un error inesperado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/auth/update": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Actualiza los datos de un usuario autenticado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Actualizar usuario",
                "parameters": [
                    {
                        "description": "Datos de actualización",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userDTO.UserUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Se han actualizado los datos del usuario correctamente.",
                        "schema": {
                            "$ref": "#/definitions/userDTO.UserRegisterResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Solicitud incorrecta",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "403": {
                        "description": "Los datos proporcionados no coinciden con el usuario autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "500": {
                        "description": "Ha ocurrido un error inesperado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/docs/definition/swagger.json": {
            "get": {
                "description": "Retorna la definición de la API(OpenAPI) en formato JSON",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "docs"
                ],
                "summary": "Obtiene la documentación de la API en formato JSON",
                "responses": {
                    "200": {
                        "description": "Archivo JSON cargado correctamente"
                    },
                    "500": {
                        "description": "Error al cargar el archivo JSON"
                    }
                }
            }
        },
        "/docs/definition/swagger.yml": {
            "get": {
                "description": "Retorna la definición de la API(OpenAPI) en formato YAML",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "docs"
                ],
                "summary": "Obtiene la documentación de la API en formato YAML",
                "responses": {
                    "200": {
                        "description": "Archivo YAML cargado correctamente"
                    },
                    "500": {
                        "description": "Error al cargar el archivo YAML"
                    }
                }
            }
        },
        "/image/deleteImage": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Borra una imagen específica del usuario autentificado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Elimina una imagen",
                "parameters": [
                    {
                        "description": "Datos para eliminar la imagen",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/imageDTO.ImageDeleteRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Imagen eliminada correctamente",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "403": {
                        "description": "Los datos proporcionados no coinciden con el usuario autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "404": {
                        "description": "Usuario/Imagen no encontrada",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "500": {
                        "description": "Ha ocurrido un error inesperado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/image/getImage/{id}": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Obtiene una imagen específica del usuario según el identificador proporcionado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Obtiene una imagen por su identificador",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identificador de la imagen",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/imageDTO.ImageDTO"
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "403": {
                        "description": "Los datos proporcionados no coinciden con el usuario autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "404": {
                        "description": "Usuario/Imagen no encontrada",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "500": {
                        "description": "Ha ocurrido un error inesperado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/image/getThumbnailImages": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Obtiene una lista paginada de imágenes en miniatura del usuario autenticado, usando paginación por cursor (lastId y pageSize).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "thumbnail"
                ],
                "summary": "Listar imágenes en miniatura (thumbnails)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Último ID recibido para la paginación",
                        "name": "lastID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Cantidad de miniaturas a devolver (por defecto 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de miniaturas con el último id para poder realizar paginacione",
                        "schema": {
                            "$ref": "#/definitions/thumbnailImageDTO.ThumbnailImageCursorDTO"
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "403": {
                        "description": "Los datos proporcionados no coinciden con el usuario autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "404": {
                        "description": "No se encontraron thumbnails",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "500": {
                        "description": "Error inesperado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/image/updateImage": {
            "put": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Actualiza una imagen específica del usuario autentificado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Actualiza el nombre de una imagen",
                "parameters": [
                    {
                        "description": "Datos de actualización para la imagen",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/imageDTO.ImageUpdateRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Imagen actualizada correctamente",
                        "schema": {
                            "$ref": "#/definitions/imageDTO.ImageUpdateResponseDTO"
                        }
                    },
                    "400": {
                        "description": "JSON invalido",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "403": {
                        "description": "Los datos proporcionados no coinciden con el usuario autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "404": {
                        "description": "Usuario/Imagen no encontrada",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "500": {
                        "description": "Ha ocurrido un error inesperado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        },
        "/image/uploadImage": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Permite a un usuario autenticado persistir una imagen",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Persiste una imagen",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Archivo de imagen a subir (jpeg, jpg, png, webp)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Imagen subida correctamente",
                        "schema": {
                            "$ref": "#/definitions/imageDTO.ImageDTO"
                        }
                    },
                    "400": {
                        "description": "Error al procesar la imagen",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "401": {
                        "description": "Usuario no autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "403": {
                        "description": "Los datos proporcionados no coinciden con el usuario autenticado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "404": {
                        "description": "Usuario/Imagen no encontrada",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "409": {
                        "description": "La imagen ya existe",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    },
                    "500": {
                        "description": "Ha ocurrido un error inesperado",
                        "schema": {
                            "$ref": "#/definitions/exception.ApiException"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.MessageResponseDTO": {
            "description": "Respuesta con un mensaje para informar al usuario que ha ocurrido",
            "type": "object",
            "properties": {
                "message": {
                    "description": "Mensaje de respuesta\nexample \"Operación realizada con éxito\"",
                    "type": "string",
                    "example": "Ha funcionado correctamente"
                }
            }
        },
        "exception.ApiException": {
            "description": "Estructura para manejar excepciones con un código de estado y un mensaje de error",
            "type": "object",
            "properties": {
                "message": {
                    "description": "Mensaje de error\nexample \"Solicitud incorrecta\"",
                    "type": "string",
                    "example": "Solicitud incorrecta"
                },
                "status": {
                    "description": "Código de estado HTTP\nexample 400",
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "imageDTO.ImageDTO": {
            "description": "Contiene la información de una imagen, incluyendo su identificador, nombre, extensión, contenido en base64 y propietario (usuario)",
            "type": "object",
            "properties": {
                "content_file": {
                    "description": "Contenido de la imagen en base64\nExample: /9j/4AAQSkZJRgABAQEAAAAAAAD...",
                    "type": "string",
                    "example": "/9j/4AAQSkZJRgABAQEAAAAAAAD."
                },
                "extension": {
                    "description": "Extensión del archivo de imagen\nExample: jpg",
                    "type": "string",
                    "example": ".jpeg"
                },
                "id": {
                    "description": "ID de la imagen\nExample: 64a1f8b8e4b0c10d3c5b2e75",
                    "type": "string",
                    "example": "64a1f8b8e4b0c10d3c5b2e75"
                },
                "name": {
                    "description": "Nombre del archivo de la imagen\nExample: foto_perfil",
                    "type": "string",
                    "example": "prueba"
                },
                "owner": {
                    "description": "Usuario propietario de la imagen\nExample: usuario123",
                    "type": "string",
                    "example": "usuario123"
                },
                "size": {
                    "description": "Tamaño de la imagen en bytes\nExample: 204800",
                    "type": "string",
                    "example": "2.3 kB"
                }
            }
        },
        "imageDTO.ImageDeleteRequestDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID de la imagen que queremos actualizar .",
                    "type": "string",
                    "example": "64a1f8b8e4b0c10d3c5b2e75"
                },
                "owner": {
                    "description": "Usuario propietario de la imagen.",
                    "type": "string",
                    "example": "usuario123"
                },
                "thumbnail_id": {
                    "description": "ID de la imagen miniatura asociadas",
                    "type": "string",
                    "example": "64a1f8b8e4b0c10d3c5b2e75"
                }
            }
        },
        "imageDTO.ImageUpdateRequestDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID de la imagen que queremos actualizar .",
                    "type": "string",
                    "example": "64a1f8b8e4b0c10d3c5b2e75"
                },
                "name": {
                    "description": "Nombre del archivo de imagen.",
                    "type": "string",
                    "example": "foto_perfil"
                },
                "owner": {
                    "description": "Usuario propietario de la imagen.",
                    "type": "string",
                    "example": "usuario123"
                },
                "thumbnail_id": {
                    "description": "ID de la imagen miniatura asociada",
                    "type": "string",
                    "example": "64a1f8b8e4b0c10d3c5b2e75"
                }
            }
        },
        "imageDTO.ImageUpdateResponseDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID de la imagen actualizada.",
                    "type": "string",
                    "example": "64a1f8b8e4b0c10d3c5b2e75"
                },
                "owner": {
                    "description": "Usuario propietario de la imagen.",
                    "type": "string",
                    "example": "usuario123"
                },
                "updated_fields": {
                    "description": "Campos que han sido actualizados en la imagen, representados como un mapa clave-valor.\nLas claves son los nombres de los campos y los valores corresponden a los nuevos valores establecidos.",
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "thumbnailImageDTO.ThumbnailImageCursorDTO": {
            "description": "Contiene una lista de miniaturas y el identificador del último elemento para la paginación.",
            "type": "object",
            "properties": {
                "lastID": {
                    "description": "ID del último elemento para la paginación",
                    "type": "string",
                    "example": "64a1f8b8e4b0c10d3c5b2e75"
                },
                "thumbnails": {
                    "description": "Lista de miniaturas de imagen",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/thumbnailImageDTO.ThumbnailImageDTO"
                    }
                }
            }
        },
        "thumbnailImageDTO.ThumbnailImageDTO": {
            "description": "Contiene la información de la miniatura de una imagen, incluyendo su identificador, nombre, extensión, contenido en base64 y propietario (usuario)",
            "type": "object",
            "properties": {
                "content_file": {
                    "description": "Contenido de la miniatura en base64\nExample: /9j/4AAQSkZJRgABAQEAAAAAAAD...",
                    "type": "string",
                    "example": "/9j/4AAQSkZJRgABAQEAAAAAAAD."
                },
                "extension": {
                    "description": "Extensión del archivo de miniatura\nExample: jpg",
                    "type": "string",
                    "example": ".jpeg"
                },
                "id": {
                    "description": "Identificador de la miniatura\nExample: 64a1f8b8e4b0c10d3c5b2e75",
                    "type": "string",
                    "example": "64a1f8b8e4b0c10d3c5b2e75"
                },
                "imageID": {
                    "description": "Identificador de la imagen\nExample: 64a1f8b8e4b0c20d3c5b2e90",
                    "type": "string",
                    "example": "64a1f8b8e4b0c20d3c5b2e90"
                },
                "name": {
                    "description": "Nombre del archivo de la miniatura\nExample: prueba",
                    "type": "string",
                    "example": "prueba"
                },
                "owner": {
                    "description": "Usuario propietario de la miniatura\nExample: usuario123",
                    "type": "string",
                    "example": "usuario123"
                },
                "size": {
                    "description": "Tamaño de la miniatura en bytes\nExample: 204800",
                    "type": "string",
                    "example": "2.3 kB"
                }
            }
        },
        "userDTO.LoginRequestDTO": {
            "description": "Datos requeridos para realizar autentificación del usuario",
            "type": "object",
            "properties": {
                "password": {
                    "description": "Contraseña del usuario\nexample \"MiContraseñaSegura.\"",
                    "type": "string",
                    "example": "MiContraseñaSegura."
                },
                "username": {
                    "description": "Nombre de usuario\nexample \"usuario123\"",
                    "type": "string",
                    "example": "usuario123"
                }
            }
        },
        "userDTO.LoginResponseDTO": {
            "description": "Respuesta al iniciar sesión correctamente",
            "type": "object",
            "properties": {
                "email": {
                    "description": "Correo electrónico del usuario\nexample \"usuario@example.com\"",
                    "type": "string",
                    "example": "usuario@example.com"
                },
                "firstname": {
                    "description": "Nombre del usuario\nexample \"Juan\"",
                    "type": "string",
                    "example": "Juan"
                },
                "lastname": {
                    "description": "Apellido del usuario\nexample \"Bricio\"",
                    "type": "string",
                    "example": "Bricio"
                },
                "message": {
                    "description": "Mensaje de confirmación\nexample \"Se ha iniciado sesión correctamente\"",
                    "type": "string",
                    "example": "Se ha iniciado sesión correctamente"
                },
                "username": {
                    "description": "Nombre de usuario autenticado\nexample \"usuario123\"",
                    "type": "string",
                    "example": "usuario123"
                }
            }
        },
        "userDTO.UserDTO": {
            "description": "Estructura que define los datos del usuario",
            "type": "object",
            "properties": {
                "email": {
                    "description": "Correo electrónico\nexample \"usuario@example.com\"",
                    "type": "string",
                    "example": "usuario@example.com"
                },
                "firstname": {
                    "description": "Nombre\nexample \"Juan\"",
                    "type": "string",
                    "example": "Juan"
                },
                "lastname": {
                    "description": "Apellido\nexample \"Pérez\"",
                    "type": "string",
                    "example": "Pérez"
                },
                "password": {
                    "description": "Contraseña\nexample \"MiContraseñaSegura.\"",
                    "type": "string",
                    "example": "MiContraseñaSegura."
                },
                "username": {
                    "description": "Nombre de usuario\nexample \"usuario123\"",
                    "type": "string",
                    "example": "usuario123"
                }
            }
        },
        "userDTO.UserDeleteDTO": {
            "description": "Datos necesarios para proceder con la eliminación del usuario",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Código de verificación para la eliminación\nexample \"123456\"",
                    "type": "string",
                    "example": "123456"
                },
                "password": {
                    "description": "Contraseña del usuario para confirmar la eliminación\nexample \"MiContraseñaSegura\"",
                    "type": "string",
                    "example": "MiContraseñaSegura"
                }
            }
        },
        "userDTO.UserMessageResponseDTO": {
            "description": "Respuesta con un mensaje para informar al usuario que ha ocurrido",
            "type": "object",
            "properties": {
                "message": {
                    "description": "Mensaje de respuesta\nexample \"Operación realizada con éxito\"",
                    "type": "string",
                    "example": "Ha funcionado correctamente"
                }
            }
        },
        "userDTO.UserRegisterResponseDTO": {
            "description": "Respuesta generada después de crear un nuevo usuario",
            "type": "object",
            "properties": {
                "firstname": {
                    "description": "Nombre\nexample \"Juan\"",
                    "type": "string",
                    "example": "Juan"
                },
                "message": {
                    "description": "Mensaje de confirmación\nexample \"Se ha creado el usuario correctamente\"",
                    "type": "string",
                    "example": "Se ha creado el usuario correctamente"
                },
                "username": {
                    "description": "Nombre de usuario\nexample \"usuario123\"",
                    "type": "string",
                    "example": "usuario123"
                }
            }
        },
        "userDTO.UserUpdateDTO": {
            "description": "Datos que pueden ser actualizados del usuario existente",
            "type": "object",
            "properties": {
                "email": {
                    "description": "Correo electrónico\nexample \"nuevo.email@example.com\"",
                    "type": "string",
                    "example": "nuevo.email@example.com"
                },
                "firstname": {
                    "description": "Nombre\nexample \"Carlos\"",
                    "type": "string",
                    "example": "Carlos"
                },
                "lastname": {
                    "description": "Apellido\nexample \"Gómez\"",
                    "type": "string",
                    "example": "Gómez"
                },
                "password": {
                    "description": "Contraseña\nexample \"NuevaContraseñaSegura.\"",
                    "type": "string",
                    "example": "NuevaContraseñaSegura."
                }
            }
        }
    },
    "securityDefinitions": {
        "CookieAuth": {
            "type": "apiKey",
            "name": "Cookie",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v1.0.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "GoGallery",
	Description:      "API for managing photo uploads, with authentication",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
