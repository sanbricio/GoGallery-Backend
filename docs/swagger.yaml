basePath: /api
definitions:
  exception.ApiException:
    description: Estructura para manejar excepciones con un código de estado y un
      mensaje de error
    properties:
      message:
        description: |-
          Mensaje de error
          example "Solicitud incorrecta"
        example: Solicitud incorrecta
        type: string
      status:
        description: |-
          Código de estado HTTP
          example 400
        example: 400
        type: integer
    type: object
  imageDTO.ImageDTO:
    description: Contiene la información de una imagen, incluyendo su identificador,
      nombre, extensión, contenido en base64 y propietario (usuario)
    properties:
      content_file:
        description: |-
          Contenido de la imagen en base64
          Example: /9j/4AAQSkZJRgABAQEAAAAAAAD...
        example: /9j/4AAQSkZJRgABAQEAAAAAAAD.
        type: string
      extension:
        description: |-
          Extensión del archivo de imagen
          Example: jpg
        example: .jpeg
        type: string
      id:
        description: |-
          ID de la imagen
          Example: 64a1f8b8e4b0c10d3c5b2e75
        example: 64a1f8b8e4b0c10d3c5b2e75
        type: string
      name:
        description: |-
          Nombre del archivo de la imagen
          Example: foto_perfil
        example: prueba
        type: string
      owner:
        description: |-
          Usuario propietario de la imagen
          Example: usuario123
        example: usuario123
        type: string
      size:
        description: |-
          Tamaño de la imagen en bytes
          Example: 204800
        example: 2.3 kB
        type: string
      thumbnail_id:
        description: |-
          ID de la imagen miniatura asociada.
          Example: 64a1f8b8e4b0c10d3c5b2e75
        example: 64a1f8b8e4b0c10d3c5b2e75
        type: string
    type: object
  thumbnailImageDTO.ThumbnailImageCursorDTO:
    description: Contiene una lista de miniaturas y el identificador del último elemento
      para la paginación.
    properties:
      lastID:
        description: ID del último elemento para la paginación
        example: 64a1f8b8e4b0c10d3c5b2e75
        type: string
      thumbnails:
        description: Lista de miniaturas de imagen
        items:
          $ref: '#/definitions/thumbnailImageDTO.ThumbnailImageDTO'
        type: array
    type: object
  thumbnailImageDTO.ThumbnailImageDTO:
    description: Contiene la información de la miniatura de una imagen, incluyendo
      su identificador, nombre, extensión, contenido en base64 y propietario (usuario)
    properties:
      content_file:
        description: |-
          Contenido de la miniatura en base64
          Example: /9j/4AAQSkZJRgABAQEAAAAAAAD...
        example: /9j/4AAQSkZJRgABAQEAAAAAAAD.
        type: string
      extension:
        description: |-
          Extensión del archivo de miniatura
          Example: jpg
        example: .jpeg
        type: string
      id:
        description: |-
          ID de la miniatura
          Example: 64a1f8b8e4b0c10d3c5b2e75
        example: 64a1f8b8e4b0c10d3c5b2e75
        type: string
      name:
        description: |-
          Nombre del archivo de la miniatura
          Example: foto_perfil
        example: prueba
        type: string
      owner:
        description: |-
          Usuario propietario de la miniatura
          Example: usuario123
        example: usuario123
        type: string
      size:
        description: |-
          Tamaño de la miniatura en bytes
          Example: 204800
        example: 2.3 kB
        type: string
    type: object
  userDTO.LoginRequestDTO:
    description: Datos requeridos para realizar autentificación del usuario
    properties:
      password:
        description: |-
          Contraseña del usuario
          example "MiContraseñaSegura."
        example: MiContraseñaSegura.
        type: string
      username:
        description: |-
          Nombre de usuario
          example "usuario123"
        example: usuario123
        type: string
    type: object
  userDTO.LoginResponseDTO:
    description: Respuesta al iniciar sesión correctamente
    properties:
      email:
        description: |-
          Correo electrónico del usuario
          example "usuario@example.com"
        example: usuario@example.com
        type: string
      message:
        description: |-
          Mensaje de confirmación
          example "Se ha iniciado sesión correctamente"
        example: Se ha iniciado sesión correctamente
        type: string
      name:
        description: |-
          Nombre del usuario
          example "Juan Pérez"
        example: Juan Pérez
        type: string
      username:
        description: |-
          Nombre de usuario autenticado
          example "usuario123"
        example: usuario123
        type: string
    type: object
  userDTO.UserDTO:
    description: Estructura que define los datos del usuario
    properties:
      email:
        description: |-
          Correo electrónico
          example "usuario@example.com"
        example: usuario@example.com
        type: string
      firstname:
        description: |-
          Nombre
          example "Juan"
        example: Juan
        type: string
      lastname:
        description: |-
          Apellido
          example "Pérez"
        example: Pérez
        type: string
      password:
        description: |-
          Contraseña
          example "MiContraseñaSegura."
        example: MiContraseñaSegura.
        type: string
      username:
        description: |-
          Nombre de usuario
          example "usuario123"
        example: usuario123
        type: string
    type: object
  userDTO.UserDeleteDTO:
    description: Datos necesarios para proceder con la eliminación del usuario
    properties:
      code:
        description: |-
          Código de verificación para la eliminación
          example "123456"
        example: "123456"
        type: string
      password:
        description: |-
          Contraseña del usuario para confirmar la eliminación
          example "MiContraseñaSegura"
        example: MiContraseñaSegura
        type: string
    type: object
  userDTO.UserRegisterResponseDTO:
    description: Respuesta generada después de crear un nuevo usuario
    properties:
      firstname:
        description: |-
          Nombre
          example "Juan"
        example: Juan
        type: string
      message:
        description: |-
          Mensaje de confirmación
          example "Se ha creado el usuario correctamente"
        example: Se ha creado el usuario correctamente
        type: string
      username:
        description: |-
          Nombre de usuario
          example "usuario123"
        example: usuario123
        type: string
    type: object
  userDTO.UserUpdateDTO:
    description: Datos que pueden ser actualizados del usuario existente
    properties:
      email:
        description: |-
          Correo electrónico
          example "nuevo.email@example.com"
        example: nuevo.email@example.com
        type: string
      firstname:
        description: |-
          Nombre
          example "Carlos"
        example: Carlos
        type: string
      lastname:
        description: |-
          Apellido
          example "Gómez"
        example: Gómez
        type: string
      password:
        description: |-
          Contraseña
          example "NuevaContraseñaSegura."
        example: NuevaContraseñaSegura.
        type: string
    type: object
info:
  contact:
    email: gogalleryteam@gmail.com
    name: Support GoGallery
  description: API for managing photo uploads, with authentication
  title: GoGallery
  version: v1.0.0
paths:
  /auth/delete:
    delete:
      consumes:
      - application/json
      description: Elimina la cuenta de usuario tras verificar el código enviado
      parameters:
      - description: Datos para confirmar eliminación
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/userDTO.UserDeleteDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Se han eliminado los datos del usuario correctamente
          schema:
            $ref: '#/definitions/userDTO.UserRegisterResponseDTO'
        "400":
          description: Solicitud incorrecta
          schema:
            $ref: '#/definitions/exception.ApiException'
        "401":
          description: Usuario no autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "403":
          description: Los datos proporcionados no coinciden con el usuario autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "404":
          description: Usuario no encontrado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "500":
          description: Ha ocurrido un error inesperado
          schema:
            $ref: '#/definitions/exception.ApiException'
      security:
      - ApiKeyAuth: []
      summary: Confirmar eliminación de cuenta
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Autentica un usuario y genera un token JWT para guardarlo en una
        cookie
      parameters:
      - description: Datos de autenticación
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/userDTO.LoginRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Se ha iniciado sesion correctamente
          headers:
            Set-Cookie:
              description: Authorization=auth_token; HttpOnly; Secure
              type: string
          schema:
            $ref: '#/definitions/userDTO.LoginResponseDTO'
        "400":
          description: Contraseña incorrecta
          schema:
            $ref: '#/definitions/exception.ApiException'
        "401":
          description: No autorizado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "404":
          description: Usuario no encontrado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "500":
          description: Ha ocurrido un error inesperado
          schema:
            $ref: '#/definitions/exception.ApiException'
      summary: Iniciar sesión
      tags:
      - auth
  /auth/logout:
    post:
      description: Cierra la sesión del usuario autenticado, elimina la cookie auth_token
      responses:
        "200":
          description: Se ha cerrado sesión correctamente
          schema:
            $ref: '#/definitions/userDTO.UserRegisterResponseDTO'
        "401":
          description: Usuario no autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "403":
          description: Los datos proporcionados no coinciden con el usuario autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "404":
          description: Usuario no encontrado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "500":
          description: Ha ocurrido un error inesperado
          schema:
            $ref: '#/definitions/exception.ApiException'
      security:
      - CookieAuth: []
      summary: Cerrar sesión
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registra un nuevo usuario en el sistema
      parameters:
      - description: Datos de registro
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/userDTO.UserDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Usuario creado
          schema:
            $ref: '#/definitions/userDTO.UserRegisterResponseDTO'
        "400":
          description: Solicitud incorrecta
          schema:
            $ref: '#/definitions/exception.ApiException'
        "500":
          description: Ha ocurrido un error inesperado
          schema:
            $ref: '#/definitions/exception.ApiException'
      summary: Registro de un nuevo usuario
      tags:
      - auth
  /auth/request-delete:
    post:
      description: Envía un código de verificación al correo para eliminar la cuenta
      responses:
        "200":
          description: Se ha enviado un código de confirmación al correo electrónico
          schema:
            $ref: '#/definitions/userDTO.UserRegisterResponseDTO'
        "401":
          description: Usuario no autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "403":
          description: Los datos proporcionados no coinciden con el usuario autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "404":
          description: Usuario no encontrado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "500":
          description: Ha ocurrido un error inesperado
          schema:
            $ref: '#/definitions/exception.ApiException'
      security:
      - CookieAuth: []
      summary: Solicitar eliminación de cuenta
      tags:
      - auth
  /auth/update:
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un usuario autenticado
      parameters:
      - description: Datos de actualización
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/userDTO.UserUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Se han actualizado los datos del usuario correctamente.
          schema:
            $ref: '#/definitions/userDTO.UserRegisterResponseDTO'
        "400":
          description: Solicitud incorrecta
          schema:
            $ref: '#/definitions/exception.ApiException'
        "401":
          description: Usuario no autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "403":
          description: Los datos proporcionados no coinciden con el usuario autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "404":
          description: Usuario no encontrado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "500":
          description: Ha ocurrido un error inesperado
          schema:
            $ref: '#/definitions/exception.ApiException'
      security:
      - CookieAuth: []
      summary: Actualizar usuario
      tags:
      - auth
  /docs/definition/swagger.json:
    get:
      description: Retorna la definición de la API(OpenAPI) en formato JSON
      produces:
      - application/json
      responses:
        "200":
          description: Archivo JSON cargado correctamente
        "500":
          description: Error al cargar el archivo JSON
      summary: Obtiene la documentación de la API en formato JSON
      tags:
      - docs
  /docs/definition/swagger.yml:
    get:
      description: Retorna la definición de la API(OpenAPI) en formato YAML
      produces:
      - text/plain
      responses:
        "200":
          description: Archivo YAML cargado correctamente
        "500":
          description: Error al cargar el archivo YAML
      summary: Obtiene la documentación de la API en formato YAML
      tags:
      - docs
  /image/deleteImage/{id}:
    delete:
      consumes:
      - application/json
      description: Borra una imagen específica del usuario autentificado
      parameters:
      - description: Identificador de la imagen
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Imagen eliminada correctamente
          schema:
            $ref: '#/definitions/imageDTO.ImageDTO'
        "401":
          description: Usuario no autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "403":
          description: Los datos proporcionados no coinciden con el usuario autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "404":
          description: Usuario/Imagen no encontrada
          schema:
            $ref: '#/definitions/exception.ApiException'
        "500":
          description: Ha ocurrido un error inesperado
          schema:
            $ref: '#/definitions/exception.ApiException'
      security:
      - CookieAuth: []
      summary: Elimina una imagen
      tags:
      - image
  /image/getImage/{id}:
    get:
      consumes:
      - application/json
      description: Obtiene una imagen específica del usuario según el identificador
        proporcionado
      parameters:
      - description: Identificador de la imagen
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/imageDTO.ImageDTO'
        "401":
          description: Usuario no autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "403":
          description: Los datos proporcionados no coinciden con el usuario autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "404":
          description: Usuario/Imagen no encontrada
          schema:
            $ref: '#/definitions/exception.ApiException'
        "500":
          description: Ha ocurrido un error inesperado
          schema:
            $ref: '#/definitions/exception.ApiException'
      security:
      - CookieAuth: []
      summary: Obtiene una imagen por su identificador
      tags:
      - image
  /image/getThumbnailImages:
    get:
      consumes:
      - application/json
      description: Obtiene una lista paginada de imágenes en miniatura del usuario
        autenticado, usando paginación por cursor (lastId y pageSize).
      parameters:
      - description: Último ID recibido para la paginación
        in: query
        name: lastID
        type: string
      - description: Cantidad de miniaturas a devolver (por defecto 10)
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de miniaturas con el último id para poder realizar paginacione
          schema:
            $ref: '#/definitions/thumbnailImageDTO.ThumbnailImageCursorDTO'
        "401":
          description: Usuario no autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "403":
          description: Los datos proporcionados no coinciden con el usuario autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "404":
          description: No se encontraron thumbnails
          schema:
            $ref: '#/definitions/exception.ApiException'
        "500":
          description: Error inesperado
          schema:
            $ref: '#/definitions/exception.ApiException'
      security:
      - CookieAuth: []
      summary: Listar imágenes en miniatura (thumbnails)
      tags:
      - thumbnail
  /image/uploadImage:
    post:
      consumes:
      - multipart/form-data
      description: Permite a un usuario autenticado persistir una imagen
      parameters:
      - description: Archivo de imagen a subir (jpeg, jpg, png, webp)
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Imagen subida correctamente
          schema:
            $ref: '#/definitions/imageDTO.ImageDTO'
        "400":
          description: Error al procesar la imagen
          schema:
            $ref: '#/definitions/exception.ApiException'
        "401":
          description: Usuario no autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "403":
          description: Los datos proporcionados no coinciden con el usuario autenticado
          schema:
            $ref: '#/definitions/exception.ApiException'
        "404":
          description: Usuario/Imagen no encontrada
          schema:
            $ref: '#/definitions/exception.ApiException'
        "409":
          description: La imagen ya existe
          schema:
            $ref: '#/definitions/exception.ApiException'
        "500":
          description: Ha ocurrido un error inesperado
          schema:
            $ref: '#/definitions/exception.ApiException'
      security:
      - CookieAuth: []
      summary: Persiste una imagen
      tags:
      - image
securityDefinitions:
  CookieAuth:
    in: header
    name: Cookie
    type: apiKey
swagger: "2.0"
