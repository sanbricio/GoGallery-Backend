name: Release Versioning on Merge

on:
  pull_request:
    branches:
      - main
    types:
      - closed

permissions:
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build
        run: go build -v ./...

      - name: Run Tests
        run: go test -v ./...

  release-versioning:
    needs: build-and-test
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Versioning and Tagging
        run: |
          VERSION=$(echo "${{ github.event.pull_request.head.ref }}" | sed 's|release/v||')

          echo "✔ Detected release version: $VERSION"
          echo "✔ Checking out to the scripts directory"
          cd ./go-gallery/scripts
          
          echo "✔ Running the versioning script"
          ./generate-version.sh "$VERSION"

          git config user.name "CI GoGallery Bot"
          git config user.email "gogalleryteam@gmail.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

          if [[ -n $(git status --porcelain) ]]; then
            git commit -am "Release version $VERSION [skip ci]"
            git push
          else
            echo "No changes to commit"
          fi

          git tag -a "v$VERSION" -m "Release version $VERSION"
          git push origin "v$VERSION"
